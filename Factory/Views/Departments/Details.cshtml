@{
  Layout = "_Layout";
}

@model UniversityRegistrar.Models.Department;
<main class="container">
  <div class="row course-details">
    <h2>Department Details</h2>
    <hr />
    <h3>@Html.DisplayNameFor(model => model.DepartmentName): @Html.DisplayFor(model => model.DepartmentName)</h3>
    @Html.HiddenFor(model => model.DepartmentId)

    <p>@Html.DisplayFor(model => model.Description)</p>
    <p>@Html.DisplayFor(model => model.ContactInfo)</p>
    <p>@Html.DisplayFor(model => model.DeanName)</p>
  </div>
  <div class="row student-details">

    @if (@Model.JoinEntities2.Count == 0)
    {
      <p>This department does not contain any students yet</p>
    }
    else
    {
      <h4>All Courses in the Department:</h4>

      @foreach (var join in Model.JoinEntities2)
      {
        <div class="col-md-3">
          <h2><span class="title">Name:</span> <span class="content">@join.Course.CourseName</span></h2>
          <h3><span class="title">Id Number:</span> <span class="content">@join.Course.CourseId</span></h3>
        </div>
      }
    }
  </div>
  <div class="row sheparding-buttons">
    <a href='@Url.Action("AddCourse", "Departments", new { id = Model.DepartmentId })' role="button"
      class="btn btn-warning">Add a Course</a>
    <p>@Html.ActionLink("Back to departments", "Index")</p>
    <p>@Html.ActionLink("Edit Department", "Edit", new { id = Model.DepartmentId })</p>
    <p>@Html.ActionLink("Delete Department", "Delete", new { id = Model.DepartmentId })</p>
  </div>
</main>